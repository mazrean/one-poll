// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/cs-sysimpl/suzukake/handler/v1"
	"github.com/cs-sysimpl/suzukake/pkg/common"
	"github.com/cs-sysimpl/suzukake/repository"
	"github.com/cs-sysimpl/suzukake/repository/gorm2"
	"github.com/google/wire"
)

// Injectors from wire.go:

func InjectService(config *Config) (*Service, error) {
	checker := v1.NewChecker()
	api := v1.NewAPI(checker)
	service := NewService(api)
	return service, nil
}

// wire.go:

type Config struct {
	IsProduction  common.IsProduction
	SessionKey    common.SessionKey
	SessionSecret common.SessionSecret
}

var (
	isProductionField  = wire.FieldsOf(new(*Config), "IsProduction")
	sessionKeyField    = wire.FieldsOf(new(*Config), "SessionKey")
	sessionSecretField = wire.FieldsOf(new(*Config), "SessionSecret")
)

var (
	dbBind = wire.Bind(new(repository.DB), new(*gorm2.DB))
)

type Service struct {
	*v1.API
}

func NewService(api *v1.API) *Service {
	return &Service{
		API: api,
	}
}
