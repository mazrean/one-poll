name: Server CI

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  generate:
    name: Server Generate
    runs-on: ubuntu-latest
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./server/go.mod
          cache: true
          cache-dependency-path: ./server/go.sum
      - uses: actions/cache@v4
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - name: Add PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - run: go generate ./...
        working-directory: ./server
      - uses: actions/upload-artifact@v4
        with:
          name: mockGenerated
          path: ./server
  build:
    name: Server Build
    runs-on: ubuntu-latest
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-go@v5
        with:
          go-version-file: ./server/go.mod
          cache: true
          cache-dependency-path: ./server/go.sum
      - uses: actions/cache@v4
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - run: go build -o collection
        working-directory: ./server
  test:
    name: Server Test
    runs-on: ubuntu-latest
    needs: [generate]
    services:
      mysql:
        image: mariadb:10.6.4
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: quantainer
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: mockGenerated
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - run: go test ./... -v -coverprofile=./coverage.txt -race -vet=off
        env:
          APP_ENV: development
          DB_USERNAME: root
          DB_PASSWORD: password
          DB_HOSTNAME: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: quantainer
      - uses: actions/upload-artifact@v4
        with:
          name: coverage.txt
          path: coverage.txt
  lint:
    name: Server Lint
    runs-on: ubuntu-latest
    needs: [generate]
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/download-artifact@v4
        with:
          name: mockGenerated
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2.6
        with:
          go_version_file: go.mod
          reporter: github-pr-review
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workdir: ./
          fail_on_error: true
